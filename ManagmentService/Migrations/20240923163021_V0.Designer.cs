// <auto-generated />
using System;
using ManagmentService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagmentService.Migrations
{
    [DbContext(typeof(NoPersaDbContext))]
    [Migration("20240923163021_V0")]
    partial class V0
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SharedLibrary.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Article")
                        .HasColumnType("int");

                    b.Property<string>("ContactInformation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("DefaultNumberOfBoxes")
                        .HasColumnType("int");

                    b.Property<double>("DefaultPrice")
                        .HasColumnType("float");

                    b.Property<string>("GeoLocation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("HolidaysId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Title")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("WorkdaysId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HolidaysId")
                        .IsUnique();

                    b.HasIndex("WorkdaysId")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SharedLibrary.Models.DailyOverview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NumberOfBoxes")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DailyOverview");
                });

            modelBuilder.Entity("SharedLibrary.Models.MonthlyOverview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Day10Id")
                        .HasColumnType("int");

                    b.Property<int>("Day11Id")
                        .HasColumnType("int");

                    b.Property<int>("Day12Id")
                        .HasColumnType("int");

                    b.Property<int>("Day13Id")
                        .HasColumnType("int");

                    b.Property<int>("Day14Id")
                        .HasColumnType("int");

                    b.Property<int>("Day15Id")
                        .HasColumnType("int");

                    b.Property<int>("Day16Id")
                        .HasColumnType("int");

                    b.Property<int>("Day17Id")
                        .HasColumnType("int");

                    b.Property<int>("Day18Id")
                        .HasColumnType("int");

                    b.Property<int>("Day19Id")
                        .HasColumnType("int");

                    b.Property<int>("Day1Id")
                        .HasColumnType("int");

                    b.Property<int>("Day20Id")
                        .HasColumnType("int");

                    b.Property<int>("Day21Id")
                        .HasColumnType("int");

                    b.Property<int>("Day22Id")
                        .HasColumnType("int");

                    b.Property<int>("Day23Id")
                        .HasColumnType("int");

                    b.Property<int>("Day24Id")
                        .HasColumnType("int");

                    b.Property<int>("Day25Id")
                        .HasColumnType("int");

                    b.Property<int>("Day26Id")
                        .HasColumnType("int");

                    b.Property<int>("Day27Id")
                        .HasColumnType("int");

                    b.Property<int>("Day28Id")
                        .HasColumnType("int");

                    b.Property<int>("Day29Id")
                        .HasColumnType("int");

                    b.Property<int>("Day2Id")
                        .HasColumnType("int");

                    b.Property<int>("Day30Id")
                        .HasColumnType("int");

                    b.Property<int>("Day31Id")
                        .HasColumnType("int");

                    b.Property<int>("Day3Id")
                        .HasColumnType("int");

                    b.Property<int>("Day4Id")
                        .HasColumnType("int");

                    b.Property<int>("Day5Id")
                        .HasColumnType("int");

                    b.Property<int>("Day6Id")
                        .HasColumnType("int");

                    b.Property<int>("Day7Id")
                        .HasColumnType("int");

                    b.Property<int>("Day8Id")
                        .HasColumnType("int");

                    b.Property<int>("Day9Id")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("Day10Id")
                        .IsUnique();

                    b.HasIndex("Day11Id");

                    b.HasIndex("Day12Id");

                    b.HasIndex("Day13Id");

                    b.HasIndex("Day14Id");

                    b.HasIndex("Day15Id");

                    b.HasIndex("Day16Id");

                    b.HasIndex("Day17Id");

                    b.HasIndex("Day18Id");

                    b.HasIndex("Day19Id");

                    b.HasIndex("Day1Id")
                        .IsUnique();

                    b.HasIndex("Day20Id");

                    b.HasIndex("Day21Id");

                    b.HasIndex("Day22Id");

                    b.HasIndex("Day23Id");

                    b.HasIndex("Day24Id");

                    b.HasIndex("Day25Id");

                    b.HasIndex("Day26Id");

                    b.HasIndex("Day27Id");

                    b.HasIndex("Day28Id");

                    b.HasIndex("Day29Id");

                    b.HasIndex("Day2Id")
                        .IsUnique();

                    b.HasIndex("Day30Id");

                    b.HasIndex("Day31Id");

                    b.HasIndex("Day3Id")
                        .IsUnique();

                    b.HasIndex("Day4Id")
                        .IsUnique();

                    b.HasIndex("Day5Id")
                        .IsUnique();

                    b.HasIndex("Day6Id")
                        .IsUnique();

                    b.HasIndex("Day7Id")
                        .IsUnique();

                    b.HasIndex("Day8Id")
                        .IsUnique();

                    b.HasIndex("Day9Id")
                        .IsUnique();

                    b.ToTable("MonthlyOverview");
                });

            modelBuilder.Entity("SharedLibrary.Models.Weekdays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Friday")
                        .HasColumnType("bit");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Weekdays");
                });

            modelBuilder.Entity("SharedLibrary.Models.Customer", b =>
                {
                    b.HasOne("SharedLibrary.Models.Weekdays", "Holidays")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.Customer", "HolidaysId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.Weekdays", "Workdays")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.Customer", "WorkdaysId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Holidays");

                    b.Navigation("Workdays");
                });

            modelBuilder.Entity("SharedLibrary.Models.MonthlyOverview", b =>
                {
                    b.HasOne("SharedLibrary.Models.Customer", "Customer")
                        .WithMany("MonthlyOverviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day10")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day10Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day11")
                        .WithMany()
                        .HasForeignKey("Day11Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day12")
                        .WithMany()
                        .HasForeignKey("Day12Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day13")
                        .WithMany()
                        .HasForeignKey("Day13Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day14")
                        .WithMany()
                        .HasForeignKey("Day14Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day15")
                        .WithMany()
                        .HasForeignKey("Day15Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day16")
                        .WithMany()
                        .HasForeignKey("Day16Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day17")
                        .WithMany()
                        .HasForeignKey("Day17Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day18")
                        .WithMany()
                        .HasForeignKey("Day18Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day19")
                        .WithMany()
                        .HasForeignKey("Day19Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day1")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day20")
                        .WithMany()
                        .HasForeignKey("Day20Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day21")
                        .WithMany()
                        .HasForeignKey("Day21Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day22")
                        .WithMany()
                        .HasForeignKey("Day22Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day23")
                        .WithMany()
                        .HasForeignKey("Day23Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day24")
                        .WithMany()
                        .HasForeignKey("Day24Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day25")
                        .WithMany()
                        .HasForeignKey("Day25Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day26")
                        .WithMany()
                        .HasForeignKey("Day26Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day27")
                        .WithMany()
                        .HasForeignKey("Day27Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day28")
                        .WithMany()
                        .HasForeignKey("Day28Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day29")
                        .WithMany()
                        .HasForeignKey("Day29Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day2")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day30")
                        .WithMany()
                        .HasForeignKey("Day30Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day31")
                        .WithMany()
                        .HasForeignKey("Day31Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day3")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day3Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day4")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day4Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day5")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day5Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day6")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day6Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day7")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day7Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day8")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day8Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLibrary.Models.DailyOverview", "Day9")
                        .WithOne()
                        .HasForeignKey("SharedLibrary.Models.MonthlyOverview", "Day9Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Day1");

                    b.Navigation("Day10");

                    b.Navigation("Day11");

                    b.Navigation("Day12");

                    b.Navigation("Day13");

                    b.Navigation("Day14");

                    b.Navigation("Day15");

                    b.Navigation("Day16");

                    b.Navigation("Day17");

                    b.Navigation("Day18");

                    b.Navigation("Day19");

                    b.Navigation("Day2");

                    b.Navigation("Day20");

                    b.Navigation("Day21");

                    b.Navigation("Day22");

                    b.Navigation("Day23");

                    b.Navigation("Day24");

                    b.Navigation("Day25");

                    b.Navigation("Day26");

                    b.Navigation("Day27");

                    b.Navigation("Day28");

                    b.Navigation("Day29");

                    b.Navigation("Day3");

                    b.Navigation("Day30");

                    b.Navigation("Day31");

                    b.Navigation("Day4");

                    b.Navigation("Day5");

                    b.Navigation("Day6");

                    b.Navigation("Day7");

                    b.Navigation("Day8");

                    b.Navigation("Day9");
                });

            modelBuilder.Entity("SharedLibrary.Models.Customer", b =>
                {
                    b.Navigation("MonthlyOverviews");
                });
#pragma warning restore 612, 618
        }
    }
}
