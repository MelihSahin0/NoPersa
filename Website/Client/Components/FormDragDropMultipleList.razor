@using Website.Client.Components.Base
@using Website.Client.Styles

<div class="@Class">
    @for (int i = 0; i < SelectedRouteId?.Count(); i++)
    {
        int currentId = SelectedRouteId[i];
        int j = i;

        <div class="w-1/2 justify-center m-1">
            @if (DisplayFilter)
            {
                <TextInput class="@($"{Scaling.GetTextScaling()} {InputStyles.GetInputDefaultStyle()} {TextOrientation} border-black")"
                           Placeholder="Filter" @bind-Value="@StartFilter![j]" />
            }
            <ul class="@($"{MaxHeight} {MinHeight} w-full p-2 space-y-2 flex flex-col overflow-y-auto")"
                ondragover="event.preventDefault();"
                ondragstart="event.dataTransfer.setData('', event.target.id);"
                @ondrop="() => HandleDrop(null, currentId)">
                @foreach (var customer in SequenceDetails.Find(r => r.Id == currentId)?.CustomerSequence.OrderBy(c => c.Position).ToList() ?? [])
                {
                    @if (DisplayFilter == false || string.IsNullOrWhiteSpace(StartFilter![j]) || customer.Name.ToLower().StartsWith(StartFilter[j]!.ToLower()))
                    {
                        <li @ondrop="()=>HandleDrop(customer, currentId)" @key="customer"
                            @ondragleave="@(()=> {customer.IsDragOver = false;})"
                            @ondragenter="@(()=>{customer.IsDragOver = true;})"
                            @ondragstart="() => draggedItem = customer"
                            @ondragend="()=> draggedItem = null" draggable="@(Draggable.ToString())">
                            <div class="flex flex-row">
                                <label class="@($"{Scaling.GetTextScaling()} {InputStyles.GetInputDefaultStyle()} {TextOrientation} bg-white border-black select-none")">
                                    @customer.Name
                                </label>
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>
    }
</div>