@page "/deliveryStatus"
@using Website.Client.Components
@using Website.Client.Models
@using Website.Client.Styles

<div class="max-w-full">
    <div class="flex flex-row max-w-full justify-between mb-2 border-black border-b-2">
        <Tab @bind-Value="TabIndex" Items="@DeliveryStatusModel.RouteDetails.Select(route => route.Name).ToList()"/>

        <div class="flex flex-row">
            <FormInputCheckbox IsColumn="false" Label="Hide non-deliverable customers:" @bind-Value="DeliveryStatusModel.HideNonDeliverableCustomer" />
            <FormDayPicker Label="Date picker" OnDayMonthYearSelected="@(() => DeliveryStatusModel.OnDayMonthYearSelected())" @bind-Year="@DeliveryStatusModel.Year" @bind-Month="@DeliveryStatusModel.Month" @bind-Day="@DeliveryStatusModel.Day" />
        </div>
    </div>
    <div class="flex flex-row max-w-full">
        @if (DeliveryStatusModel.RouteDetails.Any()) 
        {        
            @foreach (CustomerDeliveryStatus customerRoutes in DeliveryStatusModel.RouteDetails[TabIndex].CustomerDeliveryStatus.OrderBy(AbandonedMutexException => AbandonedMutexException.Position).ToList())
            {
                @if (!DeliveryStatusModel.HideNonDeliverableCustomer || (DeliveryStatusModel.HideNonDeliverableCustomer && customerRoutes.ToDeliver))
                {
                    <CustomerStatusDisplay Text="@customerRoutes.Name" BackgroundColor="@(customerRoutes.ToDeliver ? "bg-lightGreen" : "bg-lightRed")" OnClick="@(() => OpenCustomerOverview(customerRoutes.Id))" />
                }
            }
        }
    </div>
</div>
